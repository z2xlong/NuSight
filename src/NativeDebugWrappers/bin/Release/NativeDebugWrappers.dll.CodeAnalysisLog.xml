<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Namespaces>
  <Namespace Name="Microsoft.Samples.Debugging.Native.Private">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Microsoft.Samples.Debugging.Native.Private' with another namespace.</Issue>
    </Message>
    <Message Id="Private" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Rename namespace Microsoft.Samples.Debugging.Native.Private so that it no longer conflicts with the reserved language keyword 'Private'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="Y:\Career\Ctrip 2014\Project\Ctrip.Nuget.SymbolBinder\NativeDebugWrappers\bin\Release\NativeDebugWrappers.dll">
   <Modules>
    <Module Name="nativedebugwrappers.dll">
     <Messages>
      <Message TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Add an AssemblyVersion attribute to 'NativeDebugWrappers.dll'.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Microsoft.Samples.Debugging.Native">
       <Types>
        <Type Name="AgnosticContextFlags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'AgnosticContextFlags' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x8, 0x20</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'AgnosticContextFlags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="AMD64Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'AMD' in type name 'AMD64Context' by changing it to 'Amd'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.AgnosticContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="54">In method 'AMD64Context.AMD64Context(AgnosticContextFlags)', correct the spelling of 'a' in parameter name 'aFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="54">In member 'AMD64Context.AMD64Context(AgnosticContextFlags)', replace the term 'Flags' in parameter name 'aFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.ContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="61">In member 'AMD64Context.AMD64Context(ContextFlags)', replace the term 'flags' in parameter name 'flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64FindRegisterByName(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="476">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AMD64Context.AMD64FindRegisterByName(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64SetRegisterByName(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="568">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'AMD64Context.AMD64SetRegisterByName(string, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContextChunk(Microsoft.Samples.Debugging.Native.AMD64Context,Microsoft.Samples.Debugging.Native.AMD64Context,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="285">The 'this' parameter (or 'Me' in Visual Basic) of 'AMD64Context.CheckContextChunk(AMD64Context, AMD64Context, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContexts(Microsoft.Samples.Debugging.Native.INativeContext,Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="279">In method 'AMD64Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="279">In method 'AMD64Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="NotCalledWithFinalizer" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="575">Change 'AMD64Context.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="589">'AMD64Context.Dispose(bool)' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
            <Message Id="supress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="580">In method 'AMD64Context.Dispose(bool)', correct the spelling of 'supress' in parameter name 'supressPendingFinalizer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="DisposeBoolSignature" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="580">Ensure that 'AMD64Context.Dispose(bool)' is declared as protected, virtual, and unsealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="259">In externally visible method 'AMD64Context.Equals(INativeContext)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPlatform(Microsoft.Samples.Debugging.Native.ContextFlags)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="136">'AMD64Context.GetPlatform(ContextFlags)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="136">The 'this' parameter (or 'Me' in Visual Basic) of 'AMD64Context.GetPlatform(ContextFlags)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="flags" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="136">Parameter 'flags' of 'AMD64Context.GetPlatform(ContextFlags)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_rawPtr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'AMD64Context.m_rawPtr' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSingleStepFlag(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="amd64Context.cs" Line="232">In member 'AMD64Context.SetSingleStepFlag(bool)', change parameter name 'fEnable' to 'enable' in order to match the identifier as it has been declared in 'INativeContext.SetSingleStepFlag(bool)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AMD64Flags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'AMD' in type name 'AMD64Flags' by changing it to 'Amd'.</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'AMD64Flags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SINGLE_STEP_FLAG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FLAG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FLAG' in member name 'AMD64Flags.SINGLE_STEP_FLAG' by changing it to 'Flag'.</Issue>
            </Message>
            <Message Id="SINGLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SINGLE' in member name 'AMD64Flags.SINGLE_STEP_FLAG' by changing it to 'Single'.</Issue>
            </Message>
            <Message Id="STEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEP' in member name 'AMD64Flags.SINGLE_STEP_FLAG' by changing it to 'Step'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'AMD64Flags.SINGLE_STEP_FLAG'.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'AMD64Flags.SINGLE_STEP_FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="AMD64Offsets" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'AMD64Offsets' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x2, 0x4, 0x400</Issue>
          </Message>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'AMD64Offsets', change the name of 'AMD64Offsets.P1Home' to 'None'.</Issue>
          </Message>
          <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'AMD' in type name 'AMD64Offsets' by changing it to 'Amd'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ContextFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'AMD64Offsets.ContextFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr0' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr0' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr1' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr2' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr3' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr3' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr6' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr6' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'AMD64Offsets.Dr7' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'AMD64Offsets.Dr7' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'AMD64Offsets.EFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MxCsr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Mx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Mx' in member name 'AMD64Offsets.MxCsr' by changing it to 'MX'.</Issue>
            </Message>
            <Message Id="Csr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Csr' in member name 'AMD64Offsets.MxCsr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Mx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mx' in member name 'AMD64Offsets.MxCsr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rax" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rax" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rax' in member name 'AMD64Offsets.Rax' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rbp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rbp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rbp' in member name 'AMD64Offsets.Rbp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rbx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rbx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rbx' in member name 'AMD64Offsets.Rbx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rcx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rcx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rcx' in member name 'AMD64Offsets.Rcx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rdi" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rdi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rdi' in member name 'AMD64Offsets.Rdi' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rdx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rdx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rdx' in member name 'AMD64Offsets.Rdx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rsi" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rsi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rsi' in member name 'AMD64Offsets.Rsi' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Rsp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rsp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rsp' in member name 'AMD64Offsets.Rsp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegCs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Cs' in member name 'AMD64Offsets.SegCs' by changing it to 'CS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegCs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ds" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ds' in member name 'AMD64Offsets.SegDs' by changing it to 'DS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegDs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegEs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Es" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Es' in member name 'AMD64Offsets.SegEs' by changing it to 'ES'.</Issue>
            </Message>
            <Message Id="Es" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Es' in member name 'AMD64Offsets.SegEs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegEs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegFs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Fs' in member name 'AMD64Offsets.SegFs' by changing it to 'FS'.</Issue>
            </Message>
            <Message Id="Fs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fs' in member name 'AMD64Offsets.SegFs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegFs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegGs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Gs' in member name 'AMD64Offsets.SegGs' by changing it to 'GS'.</Issue>
            </Message>
            <Message Id="Gs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gs' in member name 'AMD64Offsets.SegGs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegGs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegSs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ss" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ss' in member name 'AMD64Offsets.SegSs' by changing it to 'SS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'AMD64Offsets.SegSs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Ss" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ss' in member name 'AMD64Offsets.SegSs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm0' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm10" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm10' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm11" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm11' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm12" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm12' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm13" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm13' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm14" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm14' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm15" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm15' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm3' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm4' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm5" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm5' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm6' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm7' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm8" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm8' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Xmm9" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Xmm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Xmm' in member name 'AMD64Offsets.Xmm9' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContextAccessor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="174">Change 'ContextAccessor.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="184">'ContextAccessor.Dispose(bool)' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
            <Message Id="supress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="179">In method 'ContextAccessor.Dispose(bool)', correct the spelling of 'supress' in parameter name 'supressPendingFinalizer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="DisposeBoolSignature" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="179">Ensure that 'ContextAccessor.Dispose(bool)' is declared as protected, virtual, and unsealed.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContextAllocator" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateContext(Microsoft.Samples.Debugging.Native.ProcessorArchitecture)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="109">'ContextAllocator.GenerateContext(ProcessorArchitecture)' creates an exception of type 'ApplicationException', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetArchitectureFromPid(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Pid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="51">Correct the spelling of 'Pid' in member name 'ContextAllocator.GetArchitectureFromPid(int)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="pid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="context.cs" Line="51">In method 'ContextAllocator.GetArchitectureFromPid(int)', correct the spelling of 'pid' in parameter name 'pid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContextFlags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'ContextFlags' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x1, 0x2, 0x4, 0x8, 0x10, 0x20</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'ContextFlags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AMD64Context" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64Context' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextAll" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextAll' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextControl" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextControl' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextDebugRegisters" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextDebugRegisters' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextFloatingPoint" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextFloatingPoint' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextFull" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextFull' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextInteger" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextInteger' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AMD64ContextSegments" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextFlags.AMD64ContextSegments' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ContextSize" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AMD64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ContextSize.AMD64' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CREATE_PROCESS_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CREATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CREATE' in type name 'CREATE_PROCESS_DEBUG_INFO' by changing it to 'Create'.</Issue>
          </Message>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'CREATE_PROCESS_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'CREATE_PROCESS_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in type name 'CREATE_PROCESS_DEBUG_INFO' by changing it to 'Process'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'CREATE_PROCESS_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'CREATE_PROCESS_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'CREATE_PROCESS_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwDebugInfoFileOffset" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.dwDebugInfoFileOffset' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'CREATE_PROCESS_DEBUG_INFO.dwDebugInfoFileOffset' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fUnicode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.fUnicode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hFile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.hFile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.hFile' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hProcess" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.hProcess' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.hProcess' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hThread" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.hThread' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.hThread' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpBaseOfImage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.lpBaseOfImage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_PROCESS_DEBUG_INFO.lpBaseOfImage' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.lpBaseOfImage' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpImageName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.lpImageName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_PROCESS_DEBUG_INFO.lpImageName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.lpImageName' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpStartAddress" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.lpStartAddress' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_PROCESS_DEBUG_INFO.lpStartAddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.lpStartAddress' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpThreadLocalBase" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.lpThreadLocalBase' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_PROCESS_DEBUG_INFO.lpThreadLocalBase' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_PROCESS_DEBUG_INFO.lpThreadLocalBase' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nDebugInfoSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_PROCESS_DEBUG_INFO.nDebugInfoSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CREATE_THREAD_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="CREATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'CREATE' in type name 'CREATE_THREAD_DEBUG_INFO' by changing it to 'Create'.</Issue>
          </Message>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'CREATE_THREAD_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'CREATE_THREAD_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'THREAD' in type name 'CREATE_THREAD_DEBUG_INFO' by changing it to 'Thread'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'CREATE_THREAD_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'CREATE_THREAD_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'CREATE_THREAD_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#hThread" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_THREAD_DEBUG_INFO.hThread' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_THREAD_DEBUG_INFO.hThread' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpStartAddress" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_THREAD_DEBUG_INFO.lpStartAddress' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_THREAD_DEBUG_INFO.lpStartAddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_THREAD_DEBUG_INFO.lpStartAddress' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpThreadLocalBase" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'CREATE_THREAD_DEBUG_INFO.lpThreadLocalBase' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'CREATE_THREAD_DEBUG_INFO.lpThreadLocalBase' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'CREATE_THREAD_DEBUG_INFO.lpThreadLocalBase' private.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DebugEvent32" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'DebugEvent32' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'DebugEvent32' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
          <Message Id="CreateProcess" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEventUnion' contains the following non-portable fields: 'DebugEventUnion.CreateProcess'.</Issue>
          </Message>
          <Message Id="CreateThread" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEventUnion' contains the following non-portable fields: 'DebugEventUnion.CreateThread'.</Issue>
          </Message>
          <Message Id="Exception" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEventUnion' contains the following non-portable fields: 'DebugEventUnion.Exception'.</Issue>
          </Message>
          <Message Id="ExceptionAddress" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionAddress'.</Issue>
          </Message>
          <Message Id="ExceptionInformation0" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation0'.</Issue>
          </Message>
          <Message Id="ExceptionInformation1" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation1'.</Issue>
          </Message>
          <Message Id="ExceptionInformation10" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation10'.</Issue>
          </Message>
          <Message Id="ExceptionInformation11" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation11'.</Issue>
          </Message>
          <Message Id="ExceptionInformation12" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation12'.</Issue>
          </Message>
          <Message Id="ExceptionInformation13" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation13'.</Issue>
          </Message>
          <Message Id="ExceptionInformation14" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation14'.</Issue>
          </Message>
          <Message Id="ExceptionInformation2" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation2'.</Issue>
          </Message>
          <Message Id="ExceptionInformation3" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation3'.</Issue>
          </Message>
          <Message Id="ExceptionInformation4" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation4'.</Issue>
          </Message>
          <Message Id="ExceptionInformation5" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation5'.</Issue>
          </Message>
          <Message Id="ExceptionInformation6" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation6'.</Issue>
          </Message>
          <Message Id="ExceptionInformation7" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation7'.</Issue>
          </Message>
          <Message Id="ExceptionInformation8" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation8'.</Issue>
          </Message>
          <Message Id="ExceptionInformation9" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionInformation9'.</Issue>
          </Message>
          <Message Id="ExceptionRecord" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_DEBUG_INFO' contains the following non-portable fields: 'EXCEPTION_DEBUG_INFO.ExceptionRecord'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'EXCEPTION_RECORD' contains the following non-portable fields: 'EXCEPTION_RECORD.ExceptionRecord'.</Issue>
          </Message>
          <Message Id="LoadDll" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEventUnion' contains the following non-portable fields: 'DebugEventUnion.LoadDll'.</Issue>
          </Message>
          <Message Id="OutputDebugString" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEventUnion' contains the following non-portable fields: 'DebugEventUnion.OutputDebugString'.</Issue>
          </Message>
          <Message Id="hFile" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.hFile'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'LOAD_DLL_DEBUG_INFO' contains the following non-portable fields: 'LOAD_DLL_DEBUG_INFO.hFile'.</Issue>
          </Message>
          <Message Id="hProcess" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.hProcess'.</Issue>
          </Message>
          <Message Id="hThread" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.hThread'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_THREAD_DEBUG_INFO' contains the following non-portable fields: 'CREATE_THREAD_DEBUG_INFO.hThread'.</Issue>
          </Message>
          <Message Id="lpBaseOfDll" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'LOAD_DLL_DEBUG_INFO' contains the following non-portable fields: 'LOAD_DLL_DEBUG_INFO.lpBaseOfDll'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'UNLOAD_DLL_DEBUG_INFO' contains the following non-portable fields: 'UNLOAD_DLL_DEBUG_INFO.lpBaseOfDll'.</Issue>
          </Message>
          <Message Id="lpBaseOfImage" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.lpBaseOfImage'.</Issue>
          </Message>
          <Message Id="lpDebugStringData" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'OUTPUT_DEBUG_STRING_INFO' contains the following non-portable fields: 'OUTPUT_DEBUG_STRING_INFO.lpDebugStringData'.</Issue>
          </Message>
          <Message Id="lpImageName" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.lpImageName'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'LOAD_DLL_DEBUG_INFO' contains the following non-portable fields: 'LOAD_DLL_DEBUG_INFO.lpImageName'.</Issue>
          </Message>
          <Message Id="lpStartAddress" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.lpStartAddress'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_THREAD_DEBUG_INFO' contains the following non-portable fields: 'CREATE_THREAD_DEBUG_INFO.lpStartAddress'.</Issue>
          </Message>
          <Message Id="lpThreadLocalBase" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_PROCESS_DEBUG_INFO' contains the following non-portable fields: 'CREATE_PROCESS_DEBUG_INFO.lpThreadLocalBase'.</Issue>
           <Issue Certainty="95" Level="CriticalError">Structure 'CREATE_THREAD_DEBUG_INFO' contains the following non-portable fields: 'CREATE_THREAD_DEBUG_INFO.lpThreadLocalBase'.</Issue>
          </Message>
          <Message Id="union" TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="CriticalError">Structure 'DebugEvent32' contains the following non-portable fields: 'DebugEvent32.union'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#header" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEvent32.header' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#union" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEvent32.union' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DebugEvent64" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'DebugEvent64' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'DebugEvent64' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#header" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEvent64.header' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#union" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEvent64.union' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DebugEventHeader" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'DebugEventHeader' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'DebugEventHeader' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwDebugEventCode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventHeader.dwDebugEventCode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'DebugEventHeader.dwDebugEventCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwProcessId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventHeader.dwProcessId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'DebugEventHeader.dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwThreadId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventHeader.dwThreadId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'DebugEventHeader.dwThreadId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DebugEventUnion" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'DebugEventUnion' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'DebugEventUnion' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateProcess" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.CreateProcess' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateThread" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.CreateThread' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Exception" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.Exception' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExitProcess" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.ExitProcess' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExitThread" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.ExitThread' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadDll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.LoadDll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OutputDebugString" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.OutputDebugString' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnloadDll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'DebugEventUnion.UnloadDll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpPointer" Kind="Struct" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#ReadUInt64()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="244">'DumpPointer.ReadUInt64()' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#LookupModule(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.EndsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1830">Because the behavior of 'string.EndsWith(string)' could vary based on the current user's locale settings, replace this call in 'DumpReader.LookupModule(string)' with a call to 'string.EndsWith(string, StringComparison)'. If the result of 'string.EndsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadMemory(System.UInt64,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1291">In externally visible method 'DumpReader.ReadMemory(ulong, byte[])', validate parameter 'buffer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadMemory(System.UInt64,System.IntPtr,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.UInt64.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1313">Because the behavior of 'ulong.ToString(string)' could vary based on the current user's locale settings, replace this call in 'DumpReader.ReadMemory(ulong, IntPtr, uint)' with a call to 'ulong.ToString(string, IFormatProvider)'. If the result of 'ulong.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TranslateRVA(Microsoft.Samples.Debugging.Native.DumpReader+NativeMethods+RVA64)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1221">'DumpReader.TranslateRVA(DumpReader.NativeMethods.RVA64)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader+NativeMethods+LoadedFileMemoryLookups" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#GetBytes(System.String,System.UInt64,System.IntPtr,System.UInt32,System.UInt32&amp;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1152">In method 'DumpReader.NativeMethods.LoadedFileMemoryLookups.GetBytes(string, ulong, IntPtr, uint, ref uint)', call System.IDisposable.Dispose on object 'new NativeMethods.SafeLoadLibraryHandle(file)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InternalGetBytes(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1170">The 'this' parameter (or 'Me' in Visual Basic) of 'DumpReader.NativeMethods.LoadedFileMemoryLookups.InternalGetBytes(IntPtr, IntPtr, uint, ref uint)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_EXCEPTION" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#ExceptionAddress" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_ExceptionAddress()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="529">'DumpReader.NativeMethods.MINIDUMP_EXCEPTION.ExceptionAddress.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_EXCEPTION_STREAM" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.DumpPointer)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="params" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="573">Correct the spelling of the unrecognized token 'params' in the literal '" exception params, but found "'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_MODULE" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'DumpReader.NativeMethods.MINIDUMP_MODULE' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_SYSTEM_INFO" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'DumpReader.NativeMethods.MINIDUMP_SYSTEM_INFO' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_THREAD" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#Teb" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_Teb()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="769">'DumpReader.NativeMethods.MINIDUMP_THREAD.Teb.get()' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpReader+NativeMethods+MINIDUMP_THREAD_EX" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'DumpReader.NativeMethods.MINIDUMP_THREAD_EX' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DumpReader+NativeMethods+MinidumpMemoryChunks" Kind="Class" Accessibility="Public" ExternallyVisible="False">
         <Members>
          <Member Name="#ValidateChunks()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1043">'DumpReader.NativeMethods.MinidumpMemoryChunks.ValidateChunks()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="1054">'DumpReader.NativeMethods.MinidumpMemoryChunks.ValidateChunks()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DumpUtility" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MarshalAt`1(System.Byte[],System.UInt32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="NoArguments" Certainty="95" Level="CriticalError" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="DumpReader.cs" Line="2157">Call the 'ArgumentOutOfRangeException' constructor that contains a message and/or paramName parameter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EXCEPTION_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'EXCEPTION_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in type name 'EXCEPTION_DEBUG_INFO' by changing it to 'Exception'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'EXCEPTION_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'EXCEPTION_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EXCEPTION_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EXCEPTION_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwFirstChance" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_DEBUG_INFO.dwFirstChance' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'EXCEPTION_DEBUG_INFO.dwFirstChance' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionRecord" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_DEBUG_INFO.ExceptionRecord' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EXCEPTION_RECORD" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in type name 'EXCEPTION_RECORD' by changing it to 'Exception'.</Issue>
          </Message>
          <Message Id="RECORD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'RECORD' in type name 'EXCEPTION_RECORD' by changing it to 'Record'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'EXCEPTION_RECORD'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EXCEPTION_RECORD' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EXCEPTION_RECORD' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ExceptionAddress" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionAddress' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionAddress' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionCode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionCode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionFlags" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionFlags' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'EXCEPTION_RECORD.ExceptionFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation0" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation0' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation0' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation1' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation10" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation10' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation10' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation11" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation11' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation11' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation12" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation12' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation12' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation13" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation13' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation13' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation14" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation14' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation14' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation2' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation3" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation3' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation3' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation4" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation4' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation4' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation5" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation5' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation5' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation6" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation6' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation6' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation7" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation7' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation7' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation8" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation8' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation8' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionInformation9" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionInformation9' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionInformation9' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExceptionRecord" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.ExceptionRecord' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'EXCEPTION_RECORD.ExceptionRecord' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsNotContinuable" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Continuable" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="NativeImports.cs" Line="749">Correct the spelling of 'Continuable' in member name 'EXCEPTION_RECORD.IsNotContinuable' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NumberParameters" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXCEPTION_RECORD.NumberParameters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionCode" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'ExceptionCode' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DBG_CONTROL_C" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONTROL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONTROL' in member name 'ExceptionCode.DBG_CONTROL_C' by changing it to 'Control'.</Issue>
            </Message>
            <Message Id="DBG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DBG' in member name 'ExceptionCode.DBG_CONTROL_C' by changing it to 'Dbg'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.DBG_CONTROL_C'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXCEPTION_ACCESS_VIOLATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ACCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ACCESS' in member name 'ExceptionCode.EXCEPTION_ACCESS_VIOLATION' by changing it to 'Access'.</Issue>
            </Message>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionCode.EXCEPTION_ACCESS_VIOLATION' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="VIOLATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'VIOLATION' in member name 'ExceptionCode.EXCEPTION_ACCESS_VIOLATION' by changing it to 'Violation'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.EXCEPTION_ACCESS_VIOLATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXCEPTION_INT_DIVIDE_BY_ZERO" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DIVIDE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DIVIDE' in member name 'ExceptionCode.EXCEPTION_INT_DIVIDE_BY_ZERO' by changing it to 'Divide'.</Issue>
            </Message>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionCode.EXCEPTION_INT_DIVIDE_BY_ZERO' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="INT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INT' in member name 'ExceptionCode.EXCEPTION_INT_DIVIDE_BY_ZERO' by changing it to 'Int'.</Issue>
            </Message>
            <Message Id="ZERO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ZERO' in member name 'ExceptionCode.EXCEPTION_INT_DIVIDE_BY_ZERO' by changing it to 'Zero'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.EXCEPTION_INT_DIVIDE_BY_ZERO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXCEPTION_NONCONTINUABLE_EXCEPTION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionCode.EXCEPTION_NONCONTINUABLE_EXCEPTION' by changing it to 'Exception'.</Issue>
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionCode.EXCEPTION_NONCONTINUABLE_EXCEPTION' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="NONCONTINUABLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NONCONTINUABLE' in member name 'ExceptionCode.EXCEPTION_NONCONTINUABLE_EXCEPTION' by changing it to 'Noncontinuable'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.EXCEPTION_NONCONTINUABLE_EXCEPTION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXCEPTION_STACK_OVERFLOW" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionCode.EXCEPTION_STACK_OVERFLOW' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="OVERFLOW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OVERFLOW' in member name 'ExceptionCode.EXCEPTION_STACK_OVERFLOW' by changing it to 'Overflow'.</Issue>
            </Message>
            <Message Id="STACK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STACK' in member name 'ExceptionCode.EXCEPTION_STACK_OVERFLOW' by changing it to 'Stack'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.EXCEPTION_STACK_OVERFLOW'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STATUS_BREAKPOINT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BREAKPOINT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BREAKPOINT' in member name 'ExceptionCode.STATUS_BREAKPOINT' by changing it to 'Breakpoint'.</Issue>
            </Message>
            <Message Id="STATUS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STATUS' in member name 'ExceptionCode.STATUS_BREAKPOINT' by changing it to 'Status'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.STATUS_BREAKPOINT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STATUS_SINGLESTEP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SINGLESTEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SINGLESTEP' in member name 'ExceptionCode.STATUS_SINGLESTEP' by changing it to 'Singlestep'.</Issue>
            </Message>
            <Message Id="STATUS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STATUS' in member name 'ExceptionCode.STATUS_SINGLESTEP' by changing it to 'Status'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionCode.STATUS_SINGLESTEP'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ExceptionRecordFlags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'ExceptionRecordFlags' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'ExceptionRecordFlags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EXCEPTION_NONCONTINUABLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'ExceptionRecordFlags.EXCEPTION_NONCONTINUABLE' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="NONCONTINUABLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NONCONTINUABLE' in member name 'ExceptionRecordFlags.EXCEPTION_NONCONTINUABLE' by changing it to 'Noncontinuable'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ExceptionRecordFlags.EXCEPTION_NONCONTINUABLE'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EXIT_PROCESS_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'EXIT_PROCESS_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="EXIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EXIT' in type name 'EXIT_PROCESS_DEBUG_INFO' by changing it to 'Exit'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'EXIT_PROCESS_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in type name 'EXIT_PROCESS_DEBUG_INFO' by changing it to 'Process'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'EXIT_PROCESS_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EXIT_PROCESS_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EXIT_PROCESS_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwExitCode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXIT_PROCESS_DEBUG_INFO.dwExitCode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'EXIT_PROCESS_DEBUG_INFO.dwExitCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EXIT_THREAD_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'EXIT_THREAD_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="EXIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'EXIT' in type name 'EXIT_THREAD_DEBUG_INFO' by changing it to 'Exit'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'EXIT_THREAD_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'THREAD' in type name 'EXIT_THREAD_DEBUG_INFO' by changing it to 'Thread'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'EXIT_THREAD_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'EXIT_THREAD_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'EXIT_THREAD_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwExitCode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'EXIT_THREAD_DEBUG_INFO.dwExitCode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'EXIT_THREAD_DEBUG_INFO.dwExitCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IA64Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.AgnosticContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="54">In method 'IA64Context.IA64Context(AgnosticContextFlags)', correct the spelling of 'a' in parameter name 'aFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="54">In member 'IA64Context.IA64Context(AgnosticContextFlags)', replace the term 'Flags' in parameter name 'aFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.ContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="60">In member 'IA64Context.IA64Context(ContextFlags)', replace the term 'flags' in parameter name 'flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContextChunk(Microsoft.Samples.Debugging.Native.IA64Context,Microsoft.Samples.Debugging.Native.IA64Context,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="307">The 'this' parameter (or 'Me' in Visual Basic) of 'IA64Context.CheckContextChunk(IA64Context, IA64Context, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContexts(Microsoft.Samples.Debugging.Native.INativeContext,Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="301">In method 'IA64Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="301">In method 'IA64Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="NotCalledWithFinalizer" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="989">Change 'IA64Context.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="1003">'IA64Context.Dispose(bool)' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
            <Message Id="supress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="994">In method 'IA64Context.Dispose(bool)', correct the spelling of 'supress' in parameter name 'supressPendingFinalizer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="DisposeBoolSignature" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="994">Ensure that 'IA64Context.Dispose(bool)' is declared as protected, virtual, and unsealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="281">In externally visible method 'IA64Context.Equals(INativeContext)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPlatform(Microsoft.Samples.Debugging.Native.ContextFlags)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="137">'IA64Context.GetPlatform(ContextFlags)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="137">The 'this' parameter (or 'Me' in Visual Basic) of 'IA64Context.GetPlatform(ContextFlags)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="flags" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="137">Parameter 'flags' of 'IA64Context.GetPlatform(ContextFlags)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IA64FindRegisterByName(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="479">'IA64Context.IA64FindRegisterByName(string)' has a cyclomatic complexity of 82. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="570">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'IA64Context.IA64FindRegisterByName(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IA64SetRegisterByName(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="580">'IA64Context.IA64SetRegisterByName(string, object)' has a cyclomatic complexity of 82. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="Method" Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="580">'IA64Context.IA64SetRegisterByName(string, object)' has a maintainability index of 15. Rewrite or refactor the method to increase its maintainability index (MI). An MI below 10 indicates poor maintainability, an MI between 10 and 20 indicates moderate maintainability, and an MI above 20 indicates good maintainability.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="982">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'IA64Context.IA64SetRegisterByName(string, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_rawPtr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'IA64Context.m_rawPtr' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSingleStepFlag(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="ia64Context.cs" Line="254">In member 'IA64Context.SetSingleStepFlag(bool)', change parameter name 'fEnable' to 'enable' in order to match the identifier as it has been declared in 'INativeContext.SetSingleStepFlag(bool)'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IA64Flags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'IA64Flags' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x1, 0x8, 0x20</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'IA64Flags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IA64_BUNDLE_SIZE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BUNDLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BUNDLE' in member name 'IA64Flags.IA64_BUNDLE_SIZE' by changing it to 'Bundle'.</Issue>
            </Message>
            <Message Id="SIZE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SIZE' in member name 'IA64Flags.IA64_BUNDLE_SIZE' by changing it to 'Size'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'IA64Flags.IA64_BUNDLE_SIZE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PSR_RI" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PSR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PSR' in member name 'IA64Flags.PSR_RI' by changing it to 'Psr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'IA64Flags.PSR_RI'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SINGLE_STEP_FLAG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FLAG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FLAG' in member name 'IA64Flags.SINGLE_STEP_FLAG' by changing it to 'Flag'.</Issue>
            </Message>
            <Message Id="SINGLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SINGLE' in member name 'IA64Flags.SINGLE_STEP_FLAG' by changing it to 'Single'.</Issue>
            </Message>
            <Message Id="STEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEP' in member name 'IA64Flags.SINGLE_STEP_FLAG' by changing it to 'Step'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'IA64Flags.SINGLE_STEP_FLAG'.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'IA64Flags.SINGLE_STEP_FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IA64Offsets" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'IA64Offsets' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x8</Issue>
          </Message>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'IA64Offsets', change the name of 'IA64Offsets.ContextFlags' to 'None'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ApCCV" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ap' in member name 'IA64Offsets.ApCCV' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="CCV" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CCV' in member name 'IA64Offsets.ApCCV' by changing it to 'Ccv'.</Issue>
            </Message>
            <Message Id="Ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ap' in member name 'IA64Offsets.ApCCV' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApDCR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ap' in member name 'IA64Offsets.ApDCR' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="DCR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DCR' in member name 'IA64Offsets.ApDCR' by changing it to 'Dcr'.</Issue>
            </Message>
            <Message Id="Ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ap' in member name 'IA64Offsets.ApDCR' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApEC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ap' in member name 'IA64Offsets.ApEC' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="Ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ap' in member name 'IA64Offsets.ApEC' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApLC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ap' in member name 'IA64Offsets.ApLC' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="Ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ap' in member name 'IA64Offsets.ApLC' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ApUNAT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ap' in member name 'IA64Offsets.ApUNAT' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="UNAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UNAT' in member name 'IA64Offsets.ApUNAT' by changing it to 'Unat'.</Issue>
            </Message>
            <Message Id="Ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ap' in member name 'IA64Offsets.ApUNAT' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrRp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrRp' by changing it to 'BR'.</Issue>
            </Message>
            <Message Id="Rp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rp' in member name 'IA64Offsets.BrRp' by changing it to 'RP'.</Issue>
            </Message>
            <Message Id="Rp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rp' in member name 'IA64Offsets.BrRp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrS0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrS0' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrS1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrS1' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrS2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrS2' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrS3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrS3' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrS4" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrS4' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrT0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrT0' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#BrT1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Br" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Br' in member name 'IA64Offsets.BrT1' by changing it to 'BR'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Cflag" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cflag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cflag' in member name 'IA64Offsets.Cflag' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContextFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'IA64Offsets.ContextFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eflag" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eflag" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eflag' in member name 'IA64Offsets.Eflag' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IntGp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Gp' in member name 'IA64Offsets.IntGp' by changing it to 'GP'.</Issue>
            </Message>
            <Message Id="Gp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gp' in member name 'IA64Offsets.IntGp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IntNats" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Nats" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Nats' in member name 'IA64Offsets.IntNats' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IntSp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Sp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Sp' in member name 'IA64Offsets.IntSp' by changing it to 'SP'.</Issue>
            </Message>
            <Message Id="Sp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sp' in member name 'IA64Offsets.IntSp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IntTeb" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Teb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Teb' in member name 'IA64Offsets.IntTeb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Preds" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Preds" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Preds' in member name 'IA64Offsets.Preds' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RsBSP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BSP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BSP' in member name 'IA64Offsets.RsBSP' by changing it to 'Bsp'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rs' in member name 'IA64Offsets.RsBSP' by changing it to 'RS'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rs' in member name 'IA64Offsets.RsBSP' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RsBSPSTORE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="BSPSTORE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'BSPSTORE' in member name 'IA64Offsets.RsBSPSTORE' by changing it to 'Bspstore'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rs' in member name 'IA64Offsets.RsBSPSTORE' by changing it to 'RS'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rs' in member name 'IA64Offsets.RsBSPSTORE' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RsPFS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PFS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PFS' in member name 'IA64Offsets.RsPFS' by changing it to 'Pfs'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rs' in member name 'IA64Offsets.RsPFS' by changing it to 'RS'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rs' in member name 'IA64Offsets.RsPFS' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RsRNAT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RNAT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RNAT' in member name 'IA64Offsets.RsRNAT' by changing it to 'Rnat'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rs' in member name 'IA64Offsets.RsRNAT' by changing it to 'RS'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rs' in member name 'IA64Offsets.RsRNAT' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RsRSC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RSC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RSC' in member name 'IA64Offsets.RsRSC' by changing it to 'Rsc'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Rs' in member name 'IA64Offsets.RsRSC' by changing it to 'RS'.</Issue>
            </Message>
            <Message Id="Rs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rs' in member name 'IA64Offsets.RsRSC' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegCSD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CSD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CSD' in member name 'IA64Offsets.SegCSD' by changing it to 'Csd'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'IA64Offsets.SegCSD' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegSSD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SSD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SSD' in member name 'IA64Offsets.SegSSD' by changing it to 'Ssd'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'IA64Offsets.SegSSD' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StFCR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FCR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FCR' in member name 'IA64Offsets.StFCR' by changing it to 'Fcr'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StFCR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StFDR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FDR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FDR' in member name 'IA64Offsets.StFDR' by changing it to 'Fdr'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StFDR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StFIR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FIR' in member name 'IA64Offsets.StFIR' by changing it to 'Fir'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StFIR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StFPSR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FPSR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FPSR' in member name 'IA64Offsets.StFPSR' by changing it to 'Fpsr'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StFPSR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StFSR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FSR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FSR' in member name 'IA64Offsets.StFSR' by changing it to 'Fsr'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StFSR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StIFS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IFS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IFS' in member name 'IA64Offsets.StIFS' by changing it to 'Ifs'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StIFS' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StIIP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IIP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IIP' in member name 'IA64Offsets.StIIP' by changing it to 'Iip'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StIIP' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StIPSR" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IPSR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IPSR' in member name 'IA64Offsets.StIPSR' by changing it to 'Ipsr'.</Issue>
            </Message>
            <Message Id="St" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'St' in member name 'IA64Offsets.StIPSR' by changing it to 'ST'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UNUSEDPACK" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UNUSEDPACK" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UNUSEDPACK' in member name 'IA64Offsets.UNUSEDPACK' by changing it to 'Unusedpack'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ImageFileMachine" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'ImageFileMachine' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x4, 0x8, 0x20, 0x40, 0x100, 0x400, 0x8000</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'ImageFileMachine' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AMD64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ImageFileMachine.AMD64' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="INativeContext" Kind="Interface" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Flags" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'INativeContext.Flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPSFlags(Microsoft.Samples.Debugging.Native.AgnosticContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'INativeContext.GetPSFlags(AgnosticContextFlags)' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
            <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error">In member 'INativeContext.GetPSFlags(AgnosticContextFlags)', replace the term 'flags' in parameter name 'flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsSingleStepFlagEnabled" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'INativeContext.IsSingleStepFlagEnabled' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSingleStepFlag(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'INativeContext.SetSingleStepFlag(bool)' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LOAD_DLL_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'LOAD_DLL_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="DLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DLL' in type name 'LOAD_DLL_DEBUG_INFO' by changing it to 'Dll'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'LOAD_DLL_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="LOAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'LOAD' in type name 'LOAD_DLL_DEBUG_INFO' by changing it to 'Load'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'LOAD_DLL_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'LOAD_DLL_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'LOAD_DLL_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwDebugInfoFileOffset" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.dwDebugInfoFileOffset' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'LOAD_DLL_DEBUG_INFO.dwDebugInfoFileOffset' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fUnicode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.fUnicode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hFile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.hFile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'LOAD_DLL_DEBUG_INFO.hFile' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpBaseOfDll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.lpBaseOfDll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'LOAD_DLL_DEBUG_INFO.lpBaseOfDll' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'LOAD_DLL_DEBUG_INFO.lpBaseOfDll' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpImageName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.lpImageName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'LOAD_DLL_DEBUG_INFO.lpImageName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'LOAD_DLL_DEBUG_INFO.lpImageName' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nDebugInfoSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'LOAD_DLL_DEBUG_INFO.nDebugInfoSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadIntPtrFromTarget(Microsoft.Samples.Debugging.Native.IMemoryReader,System.IntPtr)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="NativeImports.cs" Line="860">The 'this' parameter (or 'Me' in Visual Basic) of 'LOAD_DLL_DEBUG_INFO.ReadIntPtrFromTarget(IMemoryReader, IntPtr)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ModuleInfo" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'ModuleInfo' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'ModuleInfo' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#EntryPoint" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ModuleInfo.EntryPoint' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'ModuleInfo.EntryPoint' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpBaseOfDll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ModuleInfo.lpBaseOfDll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'ModuleInfo.lpBaseOfDll' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'ModuleInfo.lpBaseOfDll' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SizeOfImage" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ModuleInfo.SizeOfImage' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeDebugEventCode" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CREATE_PROCESS_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CREATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CREATE' in member name 'NativeDebugEventCode.CREATE_PROCESS_DEBUG_EVENT' by changing it to 'Create'.</Issue>
            </Message>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.CREATE_PROCESS_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.CREATE_PROCESS_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in member name 'NativeDebugEventCode.CREATE_PROCESS_DEBUG_EVENT' by changing it to 'Process'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.CREATE_PROCESS_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CREATE_THREAD_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CREATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CREATE' in member name 'NativeDebugEventCode.CREATE_THREAD_DEBUG_EVENT' by changing it to 'Create'.</Issue>
            </Message>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.CREATE_THREAD_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.CREATE_THREAD_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'NativeDebugEventCode.CREATE_THREAD_DEBUG_EVENT' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.CREATE_THREAD_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXCEPTION_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.EXCEPTION_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.EXCEPTION_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'NativeDebugEventCode.EXCEPTION_DEBUG_EVENT' by changing it to 'Exception'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.EXCEPTION_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXIT_PROCESS_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.EXIT_PROCESS_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.EXIT_PROCESS_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="EXIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXIT' in member name 'NativeDebugEventCode.EXIT_PROCESS_DEBUG_EVENT' by changing it to 'Exit'.</Issue>
            </Message>
            <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in member name 'NativeDebugEventCode.EXIT_PROCESS_DEBUG_EVENT' by changing it to 'Process'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.EXIT_PROCESS_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EXIT_THREAD_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.EXIT_THREAD_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.EXIT_THREAD_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="EXIT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXIT' in member name 'NativeDebugEventCode.EXIT_THREAD_DEBUG_EVENT' by changing it to 'Exit'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'NativeDebugEventCode.EXIT_THREAD_DEBUG_EVENT' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.EXIT_THREAD_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOAD_DLL_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.LOAD_DLL_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="DLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DLL' in member name 'NativeDebugEventCode.LOAD_DLL_DEBUG_EVENT' by changing it to 'Dll'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.LOAD_DLL_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="LOAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LOAD' in member name 'NativeDebugEventCode.LOAD_DLL_DEBUG_EVENT' by changing it to 'Load'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.LOAD_DLL_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OUTPUT_DEBUG_STRING_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.OUTPUT_DEBUG_STRING_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.OUTPUT_DEBUG_STRING_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="OUTPUT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'OUTPUT' in member name 'NativeDebugEventCode.OUTPUT_DEBUG_STRING_EVENT' by changing it to 'Output'.</Issue>
            </Message>
            <Message Id="STRING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STRING' in member name 'NativeDebugEventCode.OUTPUT_DEBUG_STRING_EVENT' by changing it to 'String'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.OUTPUT_DEBUG_STRING_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RIP_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.RIP_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="RIP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RIP' in member name 'NativeDebugEventCode.RIP_EVENT' by changing it to 'Rip'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.RIP_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UNLOAD_DLL_DEBUG_EVENT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeDebugEventCode.UNLOAD_DLL_DEBUG_EVENT' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="DLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DLL' in member name 'NativeDebugEventCode.UNLOAD_DLL_DEBUG_EVENT' by changing it to 'Dll'.</Issue>
            </Message>
            <Message Id="EVENT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EVENT' in member name 'NativeDebugEventCode.UNLOAD_DLL_DEBUG_EVENT' by changing it to 'Event'.</Issue>
            </Message>
            <Message Id="UNLOAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'UNLOAD' in member name 'NativeDebugEventCode.UNLOAD_DLL_DEBUG_EVENT' by changing it to 'Unload'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeDebugEventCode.UNLOAD_DLL_DEBUG_EVENT'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CloseHandle(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.CloseHandle(IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ContinueDebugEvent(System.UInt32,System.UInt32,Microsoft.Samples.Debugging.Native.NativeMethods+ContinueStatus)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ContinueDebugEvent(uint, uint, NativeMethods.ContinueStatus)', correct the spelling of 'dw' in parameter name 'dwContinueStatus' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ContinueDebugEvent(uint, uint, NativeMethods.ContinueStatus)', correct the spelling of 'dw' in parameter name 'dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ContinueDebugEvent(uint, uint, NativeMethods.ContinueStatus)', correct the spelling of 'dw' in parameter name 'dwThreadId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.ContinueDebugEvent(uint, uint, NativeMethods.ContinueStatus)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateFileMapping(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IntPtr,Microsoft.Samples.Debugging.Native.NativeMethods+PageProtection,System.UInt32,System.UInt32,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'dw' in parameter name 'dwMaximumSizeHigh' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'dw' in parameter name 'dwMaximumSizeLow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="fl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'fl' in parameter name 'flProtect' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'h' in parameter name 'hFile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'lp' in parameter name 'lpFileMappingAttributes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)', correct the spelling of 'lp' in parameter name 'lpName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.CreateFileMapping(SafeFileHandle, IntPtr, NativeMethods.PageProtection, uint, uint, string)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateProcess(System.String,System.String,System.IntPtr,System.IntPtr,System.Boolean,Microsoft.Samples.Debugging.Native.NativeMethods+CreateProcessFlags,System.IntPtr,System.String,Microsoft.Samples.Debugging.Native.Private.STARTUPINFO,Microsoft.Samples.Debugging.Native.Private.PROCESS_INFORMATION)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'b' in parameter name 'bInheritHandles' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'dw' in parameter name 'dwCreationFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpApplicationName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpCommandLine' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpCurrentDirectory' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpEnvironment' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpProcessAttributes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpProcessInformation' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpStartupInfo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', correct the spelling of 'lp' in parameter name 'lpThreadAttributes' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message Id="STARTUPINFO.lpDesktop" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="FieldImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal field 'STARTUPINFO.lpDesktop' as Unicode, by setting StructLayout.CharSet on 'STARTUPINFO' to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Issue>
            </Message>
            <Message Id="STARTUPINFO.lpReserved" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="FieldImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal field 'STARTUPINFO.lpReserved' as Unicode, by setting StructLayout.CharSet on 'STARTUPINFO' to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Issue>
            </Message>
            <Message Id="STARTUPINFO.lpTitle" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="FieldImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal field 'STARTUPINFO.lpTitle' as Unicode, by setting StructLayout.CharSet on 'STARTUPINFO' to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error">In member 'NativeMethods.CreateProcess(string, string, IntPtr, IntPtr, bool, NativeMethods.CreateProcessFlags, IntPtr, string, STARTUPINFO, PROCESS_INFORMATION)', replace the term 'Flags' in parameter name 'dwCreationFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugActiveProcess(System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.DebugActiveProcess(uint)', correct the spelling of 'dw' in parameter name 'dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.DebugActiveProcess(uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugActiveProcessStop(System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.DebugActiveProcessStop(uint)', correct the spelling of 'dw' in parameter name 'dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.DebugActiveProcessStop(uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugBreakProcess(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.DebugBreakProcess(IntPtr)', correct the spelling of 'h' in parameter name 'hProcess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.DebugBreakProcess(IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DebugSetProcessKillOnExit(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Kill" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'NativeMethods.DebugSetProcessKillOnExit(bool)', correct the casing of 'Kill' in parameter name 'KillOnExit' by changing it to 'kill'.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.DebugSetProcessKillOnExit(bool)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCurrentThreadId()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetCurrentThreadId()' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Change 'NativeMethods.GetCurrentThreadId()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetFileSizeEx(System.IntPtr,System.Int64&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpFileSize' be an out parameter.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetFileSizeEx(IntPtr, out long)', correct the spelling of 'h' in parameter name 'hFile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetFileSizeEx(IntPtr, out long)', correct the spelling of 'lp' in parameter name 'lpFileSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNewerVersion" Certainty="95" Level="CriticalError">Either replace the suffix 'Ex' in member name 'NativeMethods.GetFileSizeEx(IntPtr, out long)' with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetFileSizeEx(IntPtr, out long)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetModuleInformation(System.IntPtr,System.IntPtr,Microsoft.Samples.Debugging.Native.ModuleInfo&amp;,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="2#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpmodinfo' be an out parameter.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetModuleInformation(IntPtr, IntPtr, out ModuleInfo, uint)', correct the spelling of 'h' in parameter name 'hModule' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetModuleInformation(IntPtr, IntPtr, out ModuleInfo, uint)', correct the spelling of 'h' in parameter name 'hProcess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lpmodinfo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetModuleInformation(IntPtr, IntPtr, out ModuleInfo, uint)', correct the spelling of 'lpmodinfo' in parameter name 'lpmodinfo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetModuleInformation(IntPtr, IntPtr, out ModuleInfo, uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSystemInfo(Microsoft.Samples.Debugging.Native.NativeMethods+SYSTEM_INFO&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpSystemInfo' be an out parameter.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetSystemInfo(out NativeMethods.SYSTEM_INFO)', correct the spelling of 'lp' in parameter name 'lpSystemInfo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetSystemInfo(out NativeMethods.SYSTEM_INFO)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetThreadContext(System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetThreadContext(IntPtr, IntPtr)', correct the spelling of 'h' in parameter name 'hThread' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.GetThreadContext(IntPtr, IntPtr)', correct the spelling of 'lp' in parameter name 'lpContext' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.GetThreadContext(IntPtr, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsWow64Process(Microsoft.Samples.Debugging.Native.SafeWin32Handle,System.Boolean&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="1#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'isWow' be a reference parameter.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.IsWow64Process(SafeWin32Handle, ref bool)', correct the spelling of 'h' in parameter name 'hProcess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning">Add the MarshalAsAttribute to parameter 'isWow' of P/Invoke 'NativeMethods.IsWow64Process(SafeWin32Handle, ref bool)'. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.IsWow64Process(SafeWin32Handle, ref bool)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadLibraryEx(System.String,System.Int32,Microsoft.Samples.Debugging.Native.NativeMethods+LoadLibraryFlags)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hFile' of P/Invoke 'NativeMethods.LoadLibraryEx(string, int, NativeMethods.LoadLibraryFlags)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'int'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'fileName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MapViewOfFile(Microsoft.Samples.Debugging.Native.SafeWin32Handle,System.UInt32,System.UInt32,System.UInt32,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)', correct the spelling of 'dw' in parameter name 'dwDesiredAccess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)', correct the spelling of 'dw' in parameter name 'dwFileOffsetHigh' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)', correct the spelling of 'dw' in parameter name 'dwFileOffsetLow' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)', correct the spelling of 'dw' in parameter name 'dwNumberOfBytesToMap' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)', correct the spelling of 'h' in parameter name 'hFileMappingObject' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.MapViewOfFile(SafeWin32Handle, uint, uint, uint, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenProcess(System.Int32,System.Boolean,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenProcess(int, bool, int)', correct the spelling of 'b' in parameter name 'bInheritHandle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenProcess(int, bool, int)', correct the spelling of 'dw' in parameter name 'dwDesiredAccess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenProcess(int, bool, int)', correct the spelling of 'dw' in parameter name 'dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning">Add the MarshalAsAttribute to parameter 'bInheritHandle' of P/Invoke 'NativeMethods.OpenProcess(int, bool, int)'. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.OpenProcess(int, bool, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenThread(Microsoft.Samples.Debugging.Native.ThreadAccess,System.Boolean,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenThread(ThreadAccess, bool, uint)', correct the spelling of 'b' in parameter name 'bInheritHandle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenThread(ThreadAccess, bool, uint)', correct the spelling of 'dw' in parameter name 'dwDesiredAccess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.OpenThread(ThreadAccess, bool, uint)', correct the spelling of 'dw' in parameter name 'dwThreadId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.OpenThread(ThreadAccess, bool, uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadProcessMemory(System.IntPtr,System.IntPtr,System.Byte[],System.UIntPtr,System.Int32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="4#" TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'lpNumberOfBytesRead' be an out parameter.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)', correct the spelling of 'h' in parameter name 'hProcess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)', correct the spelling of 'lp' in parameter name 'lpBaseAddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)', correct the spelling of 'lp' in parameter name 'lpBuffer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)', correct the spelling of 'lp' in parameter name 'lpNumberOfBytesRead' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="n" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)', correct the spelling of 'n' in parameter name 'nSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.ReadProcessMemory(IntPtr, IntPtr, byte[], UIntPtr, out int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetEvent(Microsoft.Samples.Debugging.Native.SafeWin32Handle)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.SetEvent(SafeWin32Handle)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetThreadContext(System.IntPtr,System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetThreadContext(IntPtr, IntPtr)', correct the spelling of 'h' in parameter name 'hThread' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.SetThreadContext(IntPtr, IntPtr)', correct the spelling of 'lp' in parameter name 'lpContext' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.SetThreadContext(IntPtr, IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TerminateProcess(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.TerminateProcess(IntPtr, uint)', correct the spelling of 'h' in parameter name 'hProcess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="u" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.TerminateProcess(IntPtr, uint)', correct the spelling of 'u' in parameter name 'uExitCode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.TerminateProcess(IntPtr, uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnmapViewOfFile(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Unmap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Unmap' in member name 'NativeMethods.UnmapViewOfFile(IntPtr)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.UnmapViewOfFile(IntPtr)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaitForDebugEvent32(Microsoft.Samples.Debugging.Native.DebugEvent32&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'pDebugEvent' be a reference parameter.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForDebugEvent32(ref DebugEvent32, int)', correct the spelling of 'dw' in parameter name 'dwMilliseconds' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForDebugEvent32(ref DebugEvent32, int)', correct the spelling of 'p' in parameter name 'pDebugEvent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.WaitForDebugEvent32(ref DebugEvent32, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaitForDebugEvent64(Microsoft.Samples.Debugging.Native.DebugEvent64&amp;,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning">Consider a design that does not require that 'pDebugEvent' be a reference parameter.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForDebugEvent64(ref DebugEvent64, int)', correct the spelling of 'dw' in parameter name 'dwMilliseconds' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="p" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForDebugEvent64(ref DebugEvent64, int)', correct the spelling of 'p' in parameter name 'pDebugEvent' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.WaitForDebugEvent64(ref DebugEvent64, int)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WaitForSingleObject(System.IntPtr,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForSingleObject(IntPtr, uint)', correct the spelling of 'dw' in parameter name 'dwMilliseconds' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="h" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'NativeMethods.WaitForSingleObject(IntPtr, uint)', correct the spelling of 'h' in parameter name 'hHandle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="CriticalError">Change the accessibility of P/Invoke 'NativeMethods.WaitForSingleObject(IntPtr, uint)' so that it is no longer visible from outside its assembly.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+ContinueStatus" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'NativeMethods.ContinueStatus' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CONTINUED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONTINUED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONTINUED' in member name 'NativeMethods.ContinueStatus.CONTINUED' by changing it to 'Continued'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DBG_CONTINUE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONTINUE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONTINUE' in member name 'NativeMethods.ContinueStatus.DBG_CONTINUE' by changing it to 'Continue'.</Issue>
            </Message>
            <Message Id="DBG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DBG' in member name 'NativeMethods.ContinueStatus.DBG_CONTINUE' by changing it to 'Dbg'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.ContinueStatus.DBG_CONTINUE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DBG_EXCEPTION_NOT_HANDLED" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DBG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DBG' in member name 'NativeMethods.ContinueStatus.DBG_EXCEPTION_NOT_HANDLED' by changing it to 'Dbg'.</Issue>
            </Message>
            <Message Id="EXCEPTION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'EXCEPTION' in member name 'NativeMethods.ContinueStatus.DBG_EXCEPTION_NOT_HANDLED' by changing it to 'Exception'.</Issue>
            </Message>
            <Message Id="HANDLED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'HANDLED' in member name 'NativeMethods.ContinueStatus.DBG_EXCEPTION_NOT_HANDLED' by changing it to 'Handled'.</Issue>
            </Message>
            <Message Id="NOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NOT' in member name 'NativeMethods.ContinueStatus.DBG_EXCEPTION_NOT_HANDLED' by changing it to 'Not'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.ContinueStatus.DBG_EXCEPTION_NOT_HANDLED'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+CreateProcessFlags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="NotFlagsNoZeroValue" Certainty="95" Level="CriticalError">Add a member to 'NativeMethods.CreateProcessFlags' that has a value of zero with a suggested name of 'None'.</Issue>
          </Message>
          <Message TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">The constituent members of 'NativeMethods.CreateProcessFlags' appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'NativeMethods.CreateProcessFlags' is plural, change it to its singular form.</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'NativeMethods.CreateProcessFlags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CREATE_NEW_CONSOLE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONSOLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONSOLE' in member name 'NativeMethods.CreateProcessFlags.CREATE_NEW_CONSOLE' by changing it to 'Console'.</Issue>
            </Message>
            <Message Id="CREATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CREATE' in member name 'NativeMethods.CreateProcessFlags.CREATE_NEW_CONSOLE' by changing it to 'Create'.</Issue>
            </Message>
            <Message Id="NEW" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NEW' in member name 'NativeMethods.CreateProcessFlags.CREATE_NEW_CONSOLE' by changing it to 'New'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.CreateProcessFlags.CREATE_NEW_CONSOLE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEBUG_ONLY_THIS_PROCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeMethods.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="ONLY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ONLY' in member name 'NativeMethods.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS' by changing it to 'Only'.</Issue>
            </Message>
            <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in member name 'NativeMethods.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS' by changing it to 'Process'.</Issue>
            </Message>
            <Message Id="THIS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THIS' in member name 'NativeMethods.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS' by changing it to 'This'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.CreateProcessFlags.DEBUG_ONLY_THIS_PROCESS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DEBUG_PROCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in member name 'NativeMethods.CreateProcessFlags.DEBUG_PROCESS' by changing it to 'Debug'.</Issue>
            </Message>
            <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in member name 'NativeMethods.CreateProcessFlags.DEBUG_PROCESS' by changing it to 'Process'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'NativeMethods.CreateProcessFlags.DEBUG_PROCESS'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+LoadLibraryFlags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'NativeMethods.LoadLibraryFlags' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'NativeMethods.LoadLibraryFlags', change the name of 'NativeMethods.LoadLibraryFlags.NoFlags' to 'None'.</Issue>
          </Message>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'NativeMethods.LoadLibraryFlags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DontResolveDllReferences" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dont" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Dont' in member name 'NativeMethods.LoadLibraryFlags.DontResolveDllReferences' with the preferred alternate 'DoNot'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadIgnoreCodeAuthzLevel" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Authz" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Authz' in member name 'NativeMethods.LoadLibraryFlags.LoadIgnoreCodeAuthzLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadLibraryAsDatafile" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in member name 'NativeMethods.LoadLibraryFlags.LoadLibraryAsDatafile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadLibraryAsDatafileExclusive" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Datafile" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Datafile' in member name 'NativeMethods.LoadLibraryFlags.LoadLibraryAsDatafileExclusive' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NoFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'NativeMethods.LoadLibraryFlags.NoFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+PageProtection" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'NativeMethods.PageProtection' Int32 instead of 'uint'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
          <Message TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If enumeration name 'NativeMethods.PageProtection' is singular, change it to a plural form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Readonly" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Readonly" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'Readonly' in member name 'NativeMethods.PageProtection.Readonly' should be expressed as a compound word, 'ReadOnly'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="NativeMethods+SafeLoadLibraryHandle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'NativeMethods.SafeLoadLibraryHandle'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="SecurityRuleSetLevel2MethodsShouldNotBeProtectedWithLinkDemandsFxCopRule" Category="Microsoft.Security" CheckId="CA2135" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalWarning">'NativeMethods.SafeLoadLibraryHandle' is protected with a LinkDemand for 'SecurityPermissionAttribute'.  In the level 2 security rule set, it should be protected by being security critical instead.  Remove the LinkDemand and mark 'NativeMethods.SafeLoadLibraryHandle' security critical.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NativeMethods+SafeMapViewHandle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'NativeMethods.SafeMapViewHandle'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="SecurityRuleSetLevel2MethodsShouldNotBeProtectedWithLinkDemandsFxCopRule" Category="Microsoft.Security" CheckId="CA2135" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalWarning">'NativeMethods.SafeMapViewHandle' is protected with a LinkDemand for 'SecurityPermissionAttribute'.  In the level 2 security rule set, it should be protected by being security critical instead.  Remove the LinkDemand and mark 'NativeMethods.SafeMapViewHandle' security critical.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="NativeMethods+SYSTEM_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'NativeMethods.SYSTEM_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="SYSTEM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'SYSTEM' in type name 'NativeMethods.SYSTEM_INFO' by changing it to 'System'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'NativeMethods.SYSTEM_INFO'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'NativeMethods.SYSTEM_INFO'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'NativeMethods.SYSTEM_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'NativeMethods.SYSTEM_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwActiveProcessorMask" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwActiveProcessorMask' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwActiveProcessorMask' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'NativeMethods.SYSTEM_INFO.dwActiveProcessorMask' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwAllocationGranularity" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwAllocationGranularity' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwAllocationGranularity' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwNumberOfProcessors" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwNumberOfProcessors' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwNumberOfProcessors' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwPageSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwPageSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwPageSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwProcessorLevel" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwProcessorLevel' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwProcessorLevel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwProcessorRevision" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwProcessorRevision' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwProcessorRevision' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwProcessorType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.dwProcessorType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'NativeMethods.SYSTEM_INFO.dwProcessorType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpMaximumApplicationAddress" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.lpMaximumApplicationAddress' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'NativeMethods.SYSTEM_INFO.lpMaximumApplicationAddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'NativeMethods.SYSTEM_INFO.lpMaximumApplicationAddress' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpMinimumApplicationAddress" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'NativeMethods.SYSTEM_INFO.lpMinimumApplicationAddress' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'NativeMethods.SYSTEM_INFO.lpMinimumApplicationAddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'NativeMethods.SYSTEM_INFO.lpMinimumApplicationAddress' private.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="OUTPUT_DEBUG_STRING_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'OUTPUT_DEBUG_STRING_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'OUTPUT_DEBUG_STRING_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="OUTPUT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'OUTPUT' in type name 'OUTPUT_DEBUG_STRING_INFO' by changing it to 'Output'.</Issue>
          </Message>
          <Message Id="STRING" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'STRING' in type name 'OUTPUT_DEBUG_STRING_INFO' by changing it to 'String'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'OUTPUT_DEBUG_STRING_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'OUTPUT_DEBUG_STRING_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'OUTPUT_DEBUG_STRING_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#fUnicode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OUTPUT_DEBUG_STRING_INFO.fUnicode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpDebugStringData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OUTPUT_DEBUG_STRING_INFO.lpDebugStringData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'OUTPUT_DEBUG_STRING_INFO.lpDebugStringData' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'OUTPUT_DEBUG_STRING_INFO.lpDebugStringData' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#nDebugStringLength" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'OUTPUT_DEBUG_STRING_INFO.nDebugStringLength' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadMessageFromTarget(Microsoft.Samples.Debugging.Native.IMemoryReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="NativeImports.cs" Line="979">In externally visible method 'OUTPUT_DEBUG_STRING_INFO.ReadMessageFromTarget(IMemoryReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="PEReader" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(System.IO.FileStream)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="pe" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="PEReader.cs" Line="20">In method 'PEReader.PEReader(FileStream)', correct the spelling of 'pe' in parameter name 'peFileStream' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TimeStamp" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TimeStamp" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="PEReader.cs" Line="29">The compound word 'TimeStamp' in member name 'PEReader.TimeStamp' exists as a discrete term. If your usage is intended to be single word, case it as 'Timestamp' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Platform" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AMD64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'Platform.AMD64' by changing it to 'Amd'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ProcessorArchitecture" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="NotIntegral" Certainty="60" Level="Warning">If possible, make the underlying type of 'ProcessorArchitecture' Int32 instead of 'ushort'. Otherwise consider Byte, Int16, or Int64.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#PROCESSOR_ARCHITECTURE_ALPHA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ALPHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ALPHA' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA' by changing it to 'Alpha'.</Issue>
            </Message>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_ALPHA64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ALPHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ALPHA' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA64' by changing it to 'Alpha'.</Issue>
            </Message>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA64' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA64' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ALPHA64'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_AMD64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="AMD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'AMD' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_AMD64' by changing it to 'Amd'.</Issue>
            </Message>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_AMD64' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_AMD64' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_AMD64'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_ARM" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="ARM" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARM' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM' by changing it to 'Arm'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_ARM'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_IA32_ON_WIN64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64' by changing it to 'Processor'.</Issue>
            </Message>
            <Message Id="WIN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'WIN' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64' by changing it to 'Win'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA32_ON_WIN64'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_IA64" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA64' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA64' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_IA64'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_INTEL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_INTEL' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="INTEL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INTEL' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_INTEL' by changing it to 'Intel'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_INTEL' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_INTEL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_MIPS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MIPS' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="MIPS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MIPS' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MIPS' by changing it to 'Mips'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MIPS' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MIPS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_MSIL" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MSIL' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="MSIL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'MSIL' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MSIL' by changing it to 'Msil'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MSIL' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_MSIL'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_PPC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_PPC' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PPC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PPC' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_PPC' by changing it to 'Ppc'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_PPC' by changing it to 'Processor'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_PPC'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PROCESSOR_ARCHITECTURE_SHX" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ARCHITECTURE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ARCHITECTURE' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_SHX' by changing it to 'Architecture'.</Issue>
            </Message>
            <Message Id="PROCESSOR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PROCESSOR' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_SHX' by changing it to 'Processor'.</Issue>
            </Message>
            <Message Id="SHX" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SHX' in member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_SHX' by changing it to 'Shx'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ProcessorArchitecture.PROCESSOR_ARCHITECTURE_SHX'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ReadMemoryFailureException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#MessageHelper(System.IntPtr,System.Int32)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="NativeImports.cs" Line="101">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'ReadMemoryFailureException.MessageHelper(IntPtr, int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SafeWin32Handle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="SecurityRuleSetLevel2MethodsShouldNotBeProtectedWithLinkDemandsFxCopRule" Category="Microsoft.Security" CheckId="CA2135" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="CriticalWarning">'SafeWin32Handle' is protected with a LinkDemand for 'SecurityPermissionAttribute'.  In the level 2 security rule set, it should be protected by being security critical instead.  Remove the LinkDemand and mark 'SafeWin32Handle' security critical.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ThreadAccess" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#THREAD_ALL_ACCESS" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ACCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ACCESS' in member name 'ThreadAccess.THREAD_ALL_ACCESS' by changing it to 'Access'.</Issue>
            </Message>
            <Message Id="ALL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'ALL' in member name 'ThreadAccess.THREAD_ALL_ACCESS' by changing it to 'All'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_ALL_ACCESS' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_ALL_ACCESS'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_DIRECT_IMPERSONATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DIRECT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'DIRECT' in member name 'ThreadAccess.THREAD_DIRECT_IMPERSONATION' by changing it to 'Direct'.</Issue>
            </Message>
            <Message Id="IMPERSONATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IMPERSONATION' in member name 'ThreadAccess.THREAD_DIRECT_IMPERSONATION' by changing it to 'Impersonation'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_DIRECT_IMPERSONATION' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_DIRECT_IMPERSONATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_GET_CONTEXT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONTEXT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONTEXT' in member name 'ThreadAccess.THREAD_GET_CONTEXT' by changing it to 'Context'.</Issue>
            </Message>
            <Message Id="GET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'GET' in member name 'ThreadAccess.THREAD_GET_CONTEXT' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_GET_CONTEXT' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_GET_CONTEXT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_IMPERSONATE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IMPERSONATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'IMPERSONATE' in member name 'ThreadAccess.THREAD_IMPERSONATE' by changing it to 'Impersonate'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_IMPERSONATE' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_IMPERSONATE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_QUERY_INFORMATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INFORMATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INFORMATION' in member name 'ThreadAccess.THREAD_QUERY_INFORMATION' by changing it to 'Information'.</Issue>
            </Message>
            <Message Id="QUERY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUERY' in member name 'ThreadAccess.THREAD_QUERY_INFORMATION' by changing it to 'Query'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_QUERY_INFORMATION' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_QUERY_INFORMATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_QUERY_LIMITED_INFORMATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INFORMATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INFORMATION' in member name 'ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION' by changing it to 'Information'.</Issue>
            </Message>
            <Message Id="LIMITED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LIMITED' in member name 'ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION' by changing it to 'Limited'.</Issue>
            </Message>
            <Message Id="QUERY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QUERY' in member name 'ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION' by changing it to 'Query'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_QUERY_LIMITED_INFORMATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_SET_CONTEXT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CONTEXT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'CONTEXT' in member name 'ThreadAccess.THREAD_SET_CONTEXT' by changing it to 'Context'.</Issue>
            </Message>
            <Message Id="SET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SET' in member name 'ThreadAccess.THREAD_SET_CONTEXT' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SET_CONTEXT' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_SET_CONTEXT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_SET_INFORMATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INFORMATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INFORMATION' in member name 'ThreadAccess.THREAD_SET_INFORMATION' by changing it to 'Information'.</Issue>
            </Message>
            <Message Id="SET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SET' in member name 'ThreadAccess.THREAD_SET_INFORMATION' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SET_INFORMATION' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_SET_INFORMATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_SET_LIMITED_INFORMATION" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INFORMATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'INFORMATION' in member name 'ThreadAccess.THREAD_SET_LIMITED_INFORMATION' by changing it to 'Information'.</Issue>
            </Message>
            <Message Id="LIMITED" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'LIMITED' in member name 'ThreadAccess.THREAD_SET_LIMITED_INFORMATION' by changing it to 'Limited'.</Issue>
            </Message>
            <Message Id="SET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SET' in member name 'ThreadAccess.THREAD_SET_LIMITED_INFORMATION' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SET_LIMITED_INFORMATION' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_SET_LIMITED_INFORMATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_SET_THREAD_TOKEN" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SET" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SET' in member name 'ThreadAccess.THREAD_SET_THREAD_TOKEN' by changing it to 'Set'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SET_THREAD_TOKEN' by changing it to 'Thread'.</Issue>
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SET_THREAD_TOKEN' by changing it to 'Thread'.</Issue>
            </Message>
            <Message Id="TOKEN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TOKEN' in member name 'ThreadAccess.THREAD_SET_THREAD_TOKEN' by changing it to 'Token'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_SET_THREAD_TOKEN'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_SUSPEND_RESUME" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RESUME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'RESUME' in member name 'ThreadAccess.THREAD_SUSPEND_RESUME' by changing it to 'Resume'.</Issue>
            </Message>
            <Message Id="SUSPEND" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SUSPEND' in member name 'ThreadAccess.THREAD_SUSPEND_RESUME' by changing it to 'Suspend'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_SUSPEND_RESUME' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_SUSPEND_RESUME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#THREAD_TERMINATE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="TERMINATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'TERMINATE' in member name 'ThreadAccess.THREAD_TERMINATE' by changing it to 'Terminate'.</Issue>
            </Message>
            <Message Id="THREAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'THREAD' in member name 'ThreadAccess.THREAD_TERMINATE' by changing it to 'Thread'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ThreadAccess.THREAD_TERMINATE'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UNLOAD_DLL_DEBUG_INFO" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="DEBUG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DEBUG' in type name 'UNLOAD_DLL_DEBUG_INFO' by changing it to 'Debug'.</Issue>
          </Message>
          <Message Id="DLL" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DLL' in type name 'UNLOAD_DLL_DEBUG_INFO' by changing it to 'Dll'.</Issue>
          </Message>
          <Message Id="INFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFO' in type name 'UNLOAD_DLL_DEBUG_INFO' by changing it to 'Info'.</Issue>
          </Message>
          <Message Id="UNLOAD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'UNLOAD' in type name 'UNLOAD_DLL_DEBUG_INFO' by changing it to 'Unload'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'UNLOAD_DLL_DEBUG_INFO'.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'UNLOAD_DLL_DEBUG_INFO' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'UNLOAD_DLL_DEBUG_INFO' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#lpBaseOfDll" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UNLOAD_DLL_DEBUG_INFO.lpBaseOfDll' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'UNLOAD_DLL_DEBUG_INFO.lpBaseOfDll' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'UNLOAD_DLL_DEBUG_INFO.lpBaseOfDll' private.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="X86Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.AgnosticContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="54">In method 'X86Context.X86Context(AgnosticContextFlags)', correct the spelling of 'a' in parameter name 'aFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="54">In member 'X86Context.X86Context(AgnosticContextFlags)', replace the term 'Flags' in parameter name 'aFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(Microsoft.Samples.Debugging.Native.ContextFlags)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameterNoAlternate" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="60">In member 'X86Context.X86Context(ContextFlags)', replace the term 'flags' in parameter name 'flags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContextChunk(Microsoft.Samples.Debugging.Native.X86Context,Microsoft.Samples.Debugging.Native.X86Context,System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="284">The 'this' parameter (or 'Me' in Visual Basic) of 'X86Context.CheckContextChunk(X86Context, X86Context, int, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckContexts(Microsoft.Samples.Debugging.Native.INativeContext,Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="a" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="278">In method 'X86Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="278">In method 'X86Context.CheckContexts(INativeContext, INativeContext)', correct the spelling of 'a' in parameter name 'a2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="NotCalledWithFinalizer" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="551">Change 'X86Context.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="OutsideDispose" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="565">'X86Context.Dispose(bool)' calls 'GC.SuppressFinalize(object)', a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Issue>
            </Message>
            <Message Id="supress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="556">In method 'X86Context.Dispose(bool)', correct the spelling of 'supress' in parameter name 'supressPendingFinalizer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="DisposeBoolSignature" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="556">Ensure that 'X86Context.Dispose(bool)' is declared as protected, virtual, and unsealed.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Equals(Microsoft.Samples.Debugging.Native.INativeContext)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="253">In externally visible method 'X86Context.Equals(INativeContext)', validate parameter 'other' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_rawPtr" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'X86Context.m_rawPtr' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetSingleStepFlag(System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="225">In member 'X86Context.SetSingleStepFlag(bool)', change parameter name 'fEnable' to 'enable' in order to match the identifier as it has been declared in 'INativeContext.SetSingleStepFlag(bool)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X86FindRegisterByName(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="447">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'X86Context.X86FindRegisterByName(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#X86SetRegisterByName(System.String,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="y:\Career\Ctrip 2014\Project\Ctrip.NugetSymbolLocalizer\NativeDebugWrappers" File="x86Context.cs" Line="544">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'X86Context.X86SetRegisterByName(string, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="X86Flags" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in type name 'X86Flags' with an appropriate alternate or remove it entirely.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SINGLE_STEP_FLAG" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FLAG" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'FLAG' in member name 'X86Flags.SINGLE_STEP_FLAG' by changing it to 'Flag'.</Issue>
            </Message>
            <Message Id="SINGLE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SINGLE' in member name 'X86Flags.SINGLE_STEP_FLAG' by changing it to 'Single'.</Issue>
            </Message>
            <Message Id="STEP" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'STEP' in member name 'X86Flags.SINGLE_STEP_FLAG' by changing it to 'Step'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'X86Flags.SINGLE_STEP_FLAG'.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'X86Flags.SINGLE_STEP_FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="X86Offsets" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="NonBreaking">
           <Issue Certainty="50" Level="Error">'X86Offsets' is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: 0x1, 0x2, 0x20, 0x40, 0x80</Issue>
          </Message>
          <Message TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="FlagsRename" Certainty="95" Level="CriticalError">In enum 'X86Offsets', change the name of 'X86Offsets.ContextFlags' to 'None'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ContextFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'X86Offsets.ContextFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr0" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr0' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr0' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr1' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr2" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr2' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr3" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr3' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr3' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr6" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr6' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr6' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dr7" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Dr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Dr' in member name 'X86Offsets.Dr7' by changing it to 'DR'.</Issue>
            </Message>
            <Message Id="Dr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Dr' in member name 'X86Offsets.Dr7' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eax" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eax" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eax' in member name 'X86Offsets.Eax' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ebp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ebp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ebp' in member name 'X86Offsets.Ebp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ebx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ebx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ebx' in member name 'X86Offsets.Ebx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Ecx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ecx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ecx' in member name 'X86Offsets.Ecx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edx" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Edx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Edx' in member name 'X86Offsets.Edx' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EFlags" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'X86Offsets.EFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Eip" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Eip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eip' in member name 'X86Offsets.Eip' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Esi" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Esi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Esi' in member name 'X86Offsets.Esi' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Esp" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Esp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Esp' in member name 'X86Offsets.Esp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegCs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Cs' in member name 'X86Offsets.SegCs' by changing it to 'CS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegCs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegDs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ds" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ds' in member name 'X86Offsets.SegDs' by changing it to 'DS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegDs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegEs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Es" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Es' in member name 'X86Offsets.SegEs' by changing it to 'ES'.</Issue>
            </Message>
            <Message Id="Es" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Es' in member name 'X86Offsets.SegEs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegEs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegFs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Fs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Fs' in member name 'X86Offsets.SegFs' by changing it to 'FS'.</Issue>
            </Message>
            <Message Id="Fs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Fs' in member name 'X86Offsets.SegFs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegFs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegGs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Gs" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Gs' in member name 'X86Offsets.SegGs' by changing it to 'GS'.</Issue>
            </Message>
            <Message Id="Gs" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Gs' in member name 'X86Offsets.SegGs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegGs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SegSs" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ss" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'Ss' in member name 'X86Offsets.SegSs' by changing it to 'SS'.</Issue>
            </Message>
            <Message Id="Seg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Seg' in member name 'X86Offsets.SegSs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Ss" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ss' in member name 'X86Offsets.SegSs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Microsoft.Samples.Debugging.Native.Private">
       <Types>
        <Type Name="PROCESS_INFORMATION" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="INFORMATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'INFORMATION' in type name 'PROCESS_INFORMATION' by changing it to 'Information'.</Issue>
          </Message>
          <Message Id="PROCESS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'PROCESS' in type name 'PROCESS_INFORMATION' by changing it to 'Process'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'PROCESS_INFORMATION'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dwProcessId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PROCESS_INFORMATION.dwProcessId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'PROCESS_INFORMATION.dwProcessId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwThreadId" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PROCESS_INFORMATION.dwThreadId' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'PROCESS_INFORMATION.dwThreadId' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hProcess" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PROCESS_INFORMATION.hProcess' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'PROCESS_INFORMATION.hProcess' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hThread" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'PROCESS_INFORMATION.hThread' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'PROCESS_INFORMATION.hThread' private.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="STARTUPINFO" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="STARTUPINFO" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'STARTUPINFO' in type name 'STARTUPINFO' by changing it to 'Startupinfo'.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'STARTUPINFO' because it creates members of the following IDisposable types: 'SafeFileHandle'. If 'STARTUPINFO' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#cb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.cb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'cb' in member name 'STARTUPINFO.cb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cbReserved2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.cbReserved2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'cb' in member name 'STARTUPINFO.cbReserved2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwFillAttribute" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwFillAttribute' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwFillAttribute' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwFlags" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwFlags' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwFlags' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'STARTUPINFO.dwFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwX' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwXCountChars" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwXCountChars' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwXCountChars' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwXSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwXSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwXSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwY' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwYCountChars" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwYCountChars' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwYCountChars' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dwYSize" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.dwYSize' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="dw" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'dw' in member name 'STARTUPINFO.dwYSize' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hStdError" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.hStdError' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Std" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Std' in member name 'STARTUPINFO.hStdError' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hStdInput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.hStdInput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Std" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Std' in member name 'STARTUPINFO.hStdInput' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#hStdOutput" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.hStdOutput' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Std" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Std' in member name 'STARTUPINFO.hStdOutput' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpDesktop" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.lpDesktop' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'STARTUPINFO.lpDesktop' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpReserved" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.lpReserved' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'STARTUPINFO.lpReserved' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpReserved2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.lpReserved2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'STARTUPINFO.lpReserved2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="CriticalError">Make 'STARTUPINFO.lpReserved2' private.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lpTitle" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.lpTitle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lp' in member name 'STARTUPINFO.lpTitle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#wShowWindow" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2014-12-03 07:40:14Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'STARTUPINFO.wShowWindow' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidOutParameters" Category="Microsoft.Design" CheckId="CA1021">
   <Name>Avoid out parameters</Name>
   <Description>Using out parameters might indicate a design flaw. Although there are legitimate times to use out parameters, their use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be an out parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182131.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnmaintainableCode" Category="Microsoft.Maintainability" CheckId="CA1505">
   <Name>Avoid unmaintainable code</Name>
   <Description>Types and methods with a high degree of class coupling, cyclomatic complexity and/or program length can be difficult to maintain.</Description>
   <Resolution Name="Method">{0} has a maintainability index of {1}. Rewrite or refactor the method to increase its maintainability index (MI). An MI below {2} indicates poor maintainability, an MI between {2} and {3} indicates moderate maintainability, and an MI above {3} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386043.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Resolution Name="NotCalledWithFinalizer">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   <Resolution Name="OutsideDispose">{0} calls {1}, a method that is typically only called within an implementation of 'IDisposable.Dispose'. Refer to the IDisposable pattern for more information.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotMarkEnumsWithFlags" Category="Microsoft.Usage" CheckId="CA2217">
   <Name>Do not mark enums with FlagsAttribute</Name>
   <Description>The enumeration does not appear to contain a consistent set values that can be combined using  the OR (|) and AND (&amp;amp;amp;) operators. Using the Flags attribute on an enumeration suggests that the enumeration values are meant to be combined using the AND and OR operators. Typically, a flags enumeration uses values that are either powers of two, or combine other values that are powers of two.</Description>
   <Resolution Name="Default">{0} is marked with FlagsAttribute but a discrete member cannot be found for every settable bit that is used across the range of enum values. Remove FlagsAttribute from the type or define new members for the following (currently missing) values: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182335.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassTypesByReference" Category="Microsoft.Design" CheckId="CA1045">
   <Name>Do not pass types by reference</Name>
   <Description>Although there are legitimate times to use reference parameters, such use frequently indicates a design that does not conform to the design guidelines for managed code.</Description>
   <Resolution Name="Default">Consider a design that does not require that {0} be a reference parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182146.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="EnumStorageShouldBeInt32" Category="Microsoft.Design" CheckId="CA1028">
   <Name>Enum storage should be Int32</Name>
   <Description>There is little or no benefit to using a type smaller than Int32. You might require a type that is larger than Int32 if: 1) the enumeration values are flags and there are or will be many (&amp;amp;gt;32) values, or 2) the type needs to be different from Int32 for backward compatibility. Avoid using an underlying type that is not integral.</Description>
   <Resolution Name="NotIntegral">If possible, make the underlying type of {0} Int32 instead of {1}. Otherwise consider Byte, Int16, or Int64.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182147.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="EnumsShouldHaveZeroValue" Category="Microsoft.Design" CheckId="CA1008">
   <Name>Enums should have zero value</Name>
   <Description>An enum should generally have a zero value. If the enum is not decorated with the Flags attribute, it should have a member with a value of zero that represents the empty state. Optionally, this value is named 'None'. For a Flags-attributed enum, a zero-valued member is optional and, if it exists, should always be named 'None'. This value should indicate that no values have been set in the enum. Using a zero-valued member for other purposes is contrary to the use of the Flags attribute in that the bitwise AND and OR operators are useless with the member.</Description>
   <Resolution Name="FlagsRename">In enum {0}, change the name of {1} to 'None'.</Resolution>
   <Resolution Name="NotFlagsNoZeroValue">Add a member to {0} that has a value of zero with a suggested name of 'None'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182149.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="FlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1714">
   <Name>Flags enums should have plural names</Name>
   <Description>An enumeration marked with FlagsAttribute should have a plural name.</Description>
   <Resolution Name="Default">If enumeration name {0} is singular, change it to a plural form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="MemberNewerVersion">Either replace the suffix '{0}' in member name {1} with the suggested numeric alternate '2' or provide a more meaningful suffix that distinguishes it from the member it replaces.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
   <Name>Identifiers should not match keywords</Name>
   <Description>Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</Description>
   <Resolution Name="Namespace">Rename namespace {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a namespace makes it harder for consumers in other languages to use the namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182248.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeBoolSignature">Ensure that {0} is declared as protected, virtual, and unsealed.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="InstantiateArgumentExceptionsCorrectly" Category="Microsoft.Usage" CheckId="CA2208">
   <Name>Instantiate argument exceptions correctly</Name>
   <Description>String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</Description>
   <Resolution Name="NoArguments">Call the {0} constructor that contains a message and/or paramName parameter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182347.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithAssemblyVersion" Category="Microsoft.Design" CheckId="CA1016">
   <Name>Mark assemblies with AssemblyVersionAttribute</Name>
   <Description>Assemblies should use version numbers. The version number is considered part of an assembly's identity. Versioning is applied by means of the AssemblyVersion attribute.</Description>
   <Resolution Name="Default">Add an AssemblyVersion attribute to {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182155.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean P/Invoke arguments with MarshalAs</Name>
   <Description>All boolean P/Invoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Default">Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182206.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027">
   <Name>Mark enums with FlagsAttribute</Name>
   <Description>The enumeration appears to be made up of combinable flags. If this true, apply the Flags attribute to the enumeration.</Description>
   <Resolution Name="Default">The constituent members of {0} appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182159.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182276.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokesShouldNotBeVisible" Category="Microsoft.Interoperability" CheckId="CA1401">
   <Name>P/Invokes should not be visible</Name>
   <Description>Interop layer should not be public. The DllImport attribute should not be applied to publicly accessible members (public or protected).</Description>
   <Resolution Name="Default">Change the accessibility of P/Invoke {0} so that it is no longer visible from outside its assembly.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182209.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalError</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182251.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="PointersShouldNotBeVisible" Category="Microsoft.Security" CheckId="CA2111">
   <Name>Pointers should not be visible</Name>
   <Description>IntPtr and UIntPtr fields should be declared as private. Exposing non-private pointers can cause a security weakness.</Description>
   <Resolution Name="Default">Make {0} private.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182306.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SecurityRuleSetLevel2MethodsShouldNotBeProtectedWithLinkDemandsFxCopRule" Category="Microsoft.Security" CheckId="CA2135">
   <Name>Level 2 assemblies should not contain LinkDemands</Name>
   <Description>LinkDemands are deprecated in the level 2 security rule set.  Instead of using LinkDemands to enforce JIT time security, SecurityCritical methods, types, and fields should be used instead.</Description>
   <Resolution Name="Default">{0} is protected with a LinkDemand for {1}.  In the level 2 security rule set, it should be protected by being security critical instead.  Remove the LinkDemand and mark {0} security critical.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/dd997569(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">CriticalWarning</MessageLevel>
   <File Name="securitytransparencyrules.dll" Version="4.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="FieldImplicitAnsi">To reduce security risk, marshal field {0} as Unicode, by setting StructLayout.CharSet on {1} to CharSet.Unicode, or by explicitly marshaling the field as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, use the BestFitMapping attribute to turn best-fit mapping off, and for added security, to turn ThrowOnUnmappableChar on.</Resolution>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Resolution Name="MemberParameterNoAlternate">In member {0}, replace the term '{1}' in parameter name {2} with an appropriate alternate or remove it entirely.</Resolution>
   <Resolution Name="TypeNoAlternate">Replace the term '{0}' in type name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182294.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="reliabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ValueTypeFieldsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1900">
   <Name>Value type fields should be portable</Name>
   <Description>Structures with explicit layout containing misaligned fields cause crashes on 64-bit platforms.</Description>
   <Resolution Name="Default">Structure {0} contains the following non-portable fields: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182285(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="portabilityrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
